<?php

/**
 * @file
 * Adds the Javascript to the bottom of Drupal page.
 */

use \Drupal\Core\Routing\RouteMatchInterface;

/**
 * Implements hook_help().
 */
function adobeanalytics_help($route_name, RouteMatchInterface $route_match) {

  switch ($route_name) {
    case 'help.page.adobeanalytics':
      return ['#markup' => "<p>" . t("Settings for AdobeAnalytics.") . "</p>"];
  }
}

/**
 * Implements template_preprocess_html().
 */
function adobeanalytics_page_bottom(&$variables) {

  $user = \Drupal::currentUser();
  $config = \Drupal::config('adobeanalytics.settings');
  $adobeanalytics_helper = \Drupal::service('adobeanalytics.adobe_analytics_helper');

  // Check if we should track the currently active user's role.
  $track_user = TRUE;
  $get_roles = array();
  $tracking_type = $config->get('adobeanalytics_role_tracking_type');
  $stored_roles = $config->get('adobeanalytics_track_roles');
  if ($stored_roles) {
    $get_roles = array();
    foreach ($stored_roles as $key => $value) {
      if ($value) {
        // Get all the selected roles.
        $get_roles[$key] = $key;
      }
    }
  }

  // Compare the roles with current user.
  if (is_array($user->getRoles())) {
    foreach ($user->getRoles() as $role) {
      if (array_key_exists($role, $get_roles)) {
        if ($tracking_type == 'inclusive') {
          $track_user = TRUE;
        }
        if ($tracking_type == 'exclusive') {
          $track_user = FALSE;
        }
        break;
      }
    }
  }

  // Don't track page views in the admin sections, or for certain roles.
  $is_admin = \Drupal::service('router.admin_context')->isAdminRoute();
  if ($is_admin || $track_user == FALSE) {
    return;
  }

  $adobeanalytics_js_file_location = $config->get(
        "adobeanalytics_js_file_location"
    );
  $js_file_location = $adobeanalytics_js_file_location;

  // Add any custom code snippets if specified and replace any tokens.
  $context = $adobeanalytics_helper->adobeAnalyticsGetTokenContext();
  $codesnippet = $adobeanalytics_helper->adobeAnalyticsTokenReplace(
        $config->get('adobeanalytics_codesnippet'), $context, array(
          'clear' => TRUE,
          'sanitize' => TRUE,
        )
    ) . "\n";

  // Format and combine variables in the "right" order
  // Right order is the code file (list likely to be maintained)
  // Then admin settings with codesnippet first and finally taxonomy->vars.
  $extra_variables_formatted = $codesnippet;
  $adobeanalytics_version = $config->get("adobeanalytics_version");

  $header = "<!-- AdobeAnalytics code version: ";
  $header .= $adobeanalytics_version;
  $header .= "\nCopyright 1996-" . date('Y') . " Adobe, Inc. -->\n";
  $header .= "<script type=\"text/javascript\" src=\"";
  $header .= $js_file_location;
  $header .= "\"></script>\n";
  $header .= "<script type=\"text/javascript\"><!--\n";

  $footer = '/************* DO NOT ALTER ANYTHING BELOW THIS LINE ! **************/
    ' . "\n";
  $footer .= 'var s_code=s.t();if(s_code)document.write(s_code)//--></script>' . "\n";
  $footer .= '<script type="text/javascript"><!--' . "\n";
  $footer .= "if(navigator.appVersion.indexOf('MSIE')>=0)document.write(unescape('%3C')+'\!-'+'-')" . "\n";
  $footer .= '//--></script>' . "\n";
  $nojs = $config->get("adobeanalytics_image_file_location");
  if (!empty($nojs)) {
    $footer .= '<noscript><img src="' . check_url(
          $nojs . '/' . rand(0, 10000000)
      ) . '" height="1" width="1" alt=""></noscript>' . "\n";
  }
  $footer .= '<!--/DO NOT REMOVE/-->' . "\n";
  $footer .= '<!-- End AdobeAnalytics code version: ';
  $footer .= $adobeanalytics_version;
  $footer .= ' -->' . "\n";

  if ($adobeanalytics_hooked_vars = \Drupal::moduleHandler()->invokeAll(
        'adobeanalytics_variables', $variables
    )) {
    if (isset($adobeanalytics_hooked_vars['header'])) {
      $header = $adobeanalytics_hooked_vars['header'];
    }
    if (isset($adobeanalytics_hooked_vars['variables'])) {
      $extra_variables_formatted .= $adobeanalytics_helper
        ->adobeAnalyticsFormatVariables(
            $adobeanalytics_hooked_vars['variables']
            );
    }
    if (isset($adobeanalytics_hooked_vars['footer'])) {
      $footer = $adobeanalytics_hooked_vars['footer'];
    }
  }

  $variables['adobeanalytics'] = array(
    'header' => array(
      '#type' => 'markup',
      '#markup' => $header,
    ),
    'variables' => array(
      '#type' => 'markup',
      '#markup' => $extra_variables_formatted,
    ),
    'footer' => array(
      '#type' => 'markup',
      '#markup' => $footer,
    ),
  );
}

/**
 * Implements hook_adobeanalytics_variables().
 */
function adobeanalytics_adobeanalytics_variables() {

  $variables = array();
  $config = Drupal::config('adobeanalytics.settings');
  $adobeanalytics_helper = \Drupal::service('adobeanalytics.adobe_analytics_helper');

  // Include variables set using the context module.
  /*
   * @TODO support context module.
   *
   * Removing block of code for now until that module is in a stable place to
   * implement the correct way.  The implementation removed was out of date.
   */

  // Include variables from the "custom variables" section of the settings form.
  $settings_variables = $config->get('adobeanalytics_extra_variables');
  foreach ($settings_variables as $key => $value) {
    $variables[$key] = $adobeanalytics_helper->adobeAnalyticsTokenReplace(
          $value
      );
  }
  return array('variables' => $variables);
}
